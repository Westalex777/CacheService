package com.cache.server.service;

import reactor.core.publisher.Mono;

/**
 * Интерфейс, предоставляющий операции для работы с кешем.
 * Содержит методы для установки и получения данных из кеша.
 *
 * @param <T> тип данных, которые могут быть сохранены в кеше.
 */
public interface CacheService<T> {

    /**
     * Сохраняет данные в кеш по заданным ключам.
     * Если время истечения не указано, данные сохраняются без срока действия.
     *
     * @param key1  первый ключ для поиска в кеше.
     * @param key2  второй ключ для поиска в кеше.
     * @param value данные, которые будут сохранены в кеше.
     * @return асинхронный результат операции, завершающийся без значения.
     */
    Mono<Void> set(String key1, String key2, T value);

    /**
     * Сохраняет данные в кеш по заданным ключам с указанием времени истечения.
     * Данные будут автоматически удалены из кеша по истечении времени.
     *
     * @param key1    первый ключ для поиска в кеше.
     * @param key2    второй ключ для поиска в кеше.
     * @param expired время истечения срока действия кеша в миллисекундах.
     * @param value   данные, которые будут сохранены в кеше.
     * @return асинхронный результат операции, завершающийся без значения.
     */
    Mono<Void> set(String key1, String key2, Long expired, T value);

    /**
     * Извлекает данные из кеша по заданным ключам.
     *
     * @param key1 первый ключ для поиска в кеше.
     * @param key2 второй ключ для поиска в кеше.
     * @return асинхронный результат операции, возвращающий данные типа {@link T}.
     */
    Mono<T> get(String key1, String key2);
}
